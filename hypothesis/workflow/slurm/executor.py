import logging
import os
import shutil
import tempfile


def execute(context, directory=None, cleanup=False):
    # Add default Slurm attributes to the nodes.
    add_default_attributes(context)
    # Create the generation directory.
    if directory is None:
        directory = tempfile.mkdtemp()
    else:
        os.makedirs(directory)
    tasks_directory = directory + "/tasks"
    os.makedirs(tasks_directory)
    # Generate the task files
    for node in context.nodes:
        generate_task_file(node, task_directory)
    # Cleanup the generated filed.
    if cleanup:
        shutil.rmtree(directory)


def add_default_attributes(context):
    for node in context.nodes:
        node.set("--export", "ALL")
        node.set("--parsable", "")
        node.set("--requeue", "")


def generate_task_file(node, directory):
    lines = []
    lines.append("#")
    lines.append("# Slurm arguments, generated by Hypothesis.")
    lines.append("# github.com/montefiore-ai/hypothesis")
    lines.append("#")
    # Add the node attributes
    for key in node.attributes:
        value = node[key]
        lines.append("#SBATCH", key, value)
    # Check if the tasks is an array tasks.
    if node.tasks > 1:
        lines.append("SBATCH --array 0-" + str(node.tasks - 1))
    lines.append('echo "Hello Slurm, from Hypothesis."')
    # Execute the function
    # TODO Implement
    # Verify whether the preconditions are satisified.
    # TODO Implement
    # Write the task file.
    with open(directory + "/" + node.name + ".sh", "w") as f:
        for line in lines:
            f.write(line + "\n")
